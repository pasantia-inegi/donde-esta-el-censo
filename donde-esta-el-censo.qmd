---
# title: "modelo de innominación de documento"
# author: "Abril 2024"
format:
  revealjs:
    auto-stretch: false
    margin: 0
    slide-number: true
    scrollable: true
    preview-links: auto
    logo: imagenes/logo_portada2.png
    css: ine_quarto_styles.css
    # footer: <https://quarto.org>
---

#


<!---
# TODO: this does not work
 ![](imagenes/logo_portada2.png){.center style="width: 20%;"}   
--->

[]{.linea-superior} 
[]{.linea-inferior} 

<!---
 <img src="imagenes/logo_portada2.png" style="width: 20%"/>  
--->

<img src="imagenes/logo_portada2.png" width="20%"/>  


[**Ciencia de datos para el sector público:**]{.big-par .center-justified}
[**Aplicación "Dónde está el censo" y su stack tecnológico**]{.big-par .center-justified}
[**Proyecto Ciencia de Datos**]{.medium-par.center-justified}

[**Abril 2024**]{.big-par .center-justified}
---

## Contenidos {.medium-par}

- Contexto y objetivo
- Demostración de la aplicación
- Estructura de la aplicación
- <HUGO_COSAS>
- Flask + Frontend
- Gunicorn
- Nginx
- Orquestado de contenedores
- ¿<MAS_HUGO_COSAS>?
- Desafíos
- Conclusiones



#

## Contexto y objetivo

::: incremental

![](imagenes/logo-censo.png){.float-right width=25%  }

- En Chile, entre marzo y junio de 2024 se está ejecutando el Censo de Población y Vivienda.

- Por primera vez es un censo de derecho, durando 3 meses, en vez de un día.

- Esto implica que debió crearse una planificación sobre qué zonas serían censadas en distintos períodos.

- En la práctica, cada comuna (municipio) se divide en 4 ciclos que van siendo encuestados secuencialmente, 
en la medida que avanza el censo.

- En este contexto, se nos solicitó desarrollar una aplicación que mostrara qué sectores están siendo 
censados para la comuna seleccionada por el usuario.

:::


## Demostración de la aplicación


[Veamos cómo funciona la aplicación!](https://dondeestaelcenso.ine.gob.cl)

## Estructura de la aplicación

![](imagenes/diagrama.PNG)



## HUGO -----------------



## Flask + Frontend {.medium-par}

![](imagenes/app_code.png){width=60% .float-right}

::: incremental
- Como vimos anteriormente, Flask es un _microframework_ para desarrollo web de backend, 
famoso por ser sencillo, liviano y flexible. Es la base de otros frameworks más complejos como FastAPI.

- Flask funciona como backend de la aplicación, comunicándose con el frontend y manejando
las lógicas de la aplicación: ploteo, renderizado programático de valores específicos, formulario.

:::

## Flask + Frontend {.medium-par}

::: {.r-stack}

![](imagenes/frontend_app1.png){.fragment .fade-in-then-out .float-right}

![](imagenes/frontend_app2.png){.fragment .fade-in-then-out .float-right}

![](imagenes/frontend_app3.png){.fragment .float-right}
:::


- Esta aplicación requirió una comunicación fluida con el frontend. En particular, entre Python
y Javascript, lo que se realizó a través de fetch requests, una herramienta relativamente
reciente nativa de Javascript.
  
  - Esto permite que, por ejemplo, Python genere los datos del gráfico, pero Javascript se encargue del
  ploteo, poniendo la carga sobre los usuarios y no sobre nuestros servidores.
  
- Javascript se encarga también de las otras lógicas de la aplicación: funcionamiento de botones,
autocompletado de texto, tooltips, botón "loading", etc.

## Gunicorn


#


[<img src="imagenes/logo_portada2.png" width="20%"/>]{.center}


[**Ciencia de datos para el sector público:**]{.big-par .center-justified}
[**Aplicación "Dónde está el censo" y su stack tecnológico**]{.big-par .center-justified}
[**Proyecto Ciencia de Datos**]{.medium-par.center-justified}

[**Abril 2024**]{.big-par .center-justified}



[]{.linea-superior} 
[]{.linea-inferior} 

